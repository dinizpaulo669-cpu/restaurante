<?php
require_once('../config/database.php');

header('Content-Type: application/json');

try {
    $conn = getConnection();
} catch (PDOException $e) {
    http_response_code(500);
    echo json_encode([
        'success' => false,
        'error' => 'Database connection failed: ' . $e->getMessage()
    ]);
    exit;
}

$access_token = '$aact_MzkwODA2MWY2OGM3MWRlMDU2NWM3MzJlNzZmNGZhZGY6OmRmZDBlMDBkLWRlNmEtNGQ0Ni1iOTgxLWMyNzJmNjA5MjNmNzo6JGFhY2hfYTE5YjVlMzktMTMzMS00YjIzLTg5NjctNzUxYTk5Y2M4ZGJl';

switch ($_SERVER['REQUEST_METHOD']) {
    case 'GET':
        try {
            if (isset($_GET['id'])) {
                $stmt = $conn->prepare("SELECT * FROM pix_charges WHERE id = ?");
                $stmt->execute([$_GET['id']]);
                $charge = $stmt->fetch(PDO::FETCH_ASSOC);
                
                if (!$charge) {
                    http_response_code(404);
                    echo json_encode(['error' => 'Cobrança não encontrada']);
                    exit;
                }
                
                echo json_encode($charge);
            } else {
                $stmt = $conn->query("SELECT * FROM pix_charges ORDER BY created_at DESC");
                echo json_encode($stmt->fetchAll(PDO::FETCH_ASSOC));
            }
        } catch (PDOException $e) {
            http_response_code(500);
            echo json_encode([
                'success' => false,
                'error' => 'Database query failed: ' . $e->getMessage()
            ]);
        }
        break;
    case 'POST':
        try {
            $data = json_decode(file_get_contents('php://input'), true);
            
            if (!$data) {
                throw new Exception('Invalid JSON data');
            }

            $amount = floatval($data['amount']);
            $reference_id = uniqid();
            
            $dados = [
                'addressKey'             => 'e1694378-6048-4b7d-b081-df61ea409e54',
                'description'            => 'Pagamento via PIX',
                'value'                  => max(0.01, $amount),
                'format'                 => 'payload',
                'expirationDate'         => date('Y-m-d\TH:i:s', strtotime('+1 day')),
                'allowsMultiplePayments' => true
            ];
            
            $curl = curl_init();
            curl_setopt_array($curl, [
                CURLOPT_URL => 'https://api.asaas.com/v3/pix/qrCodes/static',
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_CUSTOMREQUEST => 'POST',
                CURLOPT_POSTFIELDS => json_encode($dados),
                CURLOPT_HTTPHEADER => [
                    'Content-Type: application/json',
                    'access_token: ' . $access_token,
                    'User-Agent: MeuSistema/1.0'
                ]
            ]);
            
            $response = curl_exec($curl);
            $http_code = curl_getinfo($curl, CURLINFO_HTTP_CODE);
            $curl_error = curl_errno($curl);
            $resultado = json_decode($response);

            if ($curl_error) {
                throw new Exception('Erro na requisição cURL: ' . curl_error($curl));
            }

            if ($http_code != 200 || !isset($resultado->payload) || !isset($resultado->id)) {
                throw new Exception("Erro ao gerar QR Code: HTTP $http_code - " . json_encode($resultado));
            }
// ... seu código anterior permanece igual

$pagseguro_id = $resultado->id;

// Salva no banco de dados
$stmt = $conn->prepare("INSERT INTO pix_charges (name, phone, amount, reference_id, pagseguro_id, qr_code_text, qr_code_image, status, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, 'PENDING', NOW())");
$stmt->execute([
    $data['name'],
    $data['phone'],
    $amount,
    $reference_id,
    $pagseguro_id,
    $resultado->payload,
    $resultado->encodedImage
]);

// Retorno com imagem formatada corretamente
echo json_encode([
    'success' => true,
    'qr_code_text' => $resultado->payload,
    'qr_code_image' => 'data:image/png;base64,' . $resultado->encodedImage, // ✅ corrigido aqui
    'pagseguro_id' => $pagseguro_id
]);
